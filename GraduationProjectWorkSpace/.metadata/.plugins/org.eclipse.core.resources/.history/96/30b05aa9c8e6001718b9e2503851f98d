package com.cencl.portal.service.impl;

import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.noggit.JSONUtil;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.cencl.common.utils.CenclResult;
import com.cencl.common.utils.CookieUtils;
import com.cencl.common.utils.HttpClientUtil;
import com.cencl.common.utils.JsonUtils;
import com.cencl.pojo.TbItem;
import com.cencl.portal.pojo.CartItem;
import com.cencl.portal.service.CartService;

/* *
* <p>Title: 购物车Service</p>
* <p>Description: </p>
* <p>Company: Nothing</p>
* @author:  phubing
* @date: 2017年12月22日上午11:05:38
* version 0.0.1
*/
@Service
public class CartServiceImpl implements CartService{
	@Value("${REST_BASE_URL}")
	private String REST_BASE_URL;
	@Value("${ITME_INFO_URL}")
	private String ITME_INFO_URL;
	
	@Override
	public CenclResult addCartItem(long itemId, int num, HttpServletRequest request, HttpServletResponse response) {
		//取商品信息
		CartItem cartItem = null;
		
		//取购物车商品列表
		List<CartItem> itemList = getCartItemList(request);
		//判断购物车商品列表中是否存在此商品
		for (CartItem cItem : itemList) {
			//如果存在此商品
			if(cItem.getId() == itemId){
				//增加商品数量
				cItem.setNum(cItem.getNum()+ num);
				
				cartItem = cItem;
				
				break;
			}
		}
		//购物车中不存在同样商品则新增
		if(cartItem == null){
			//该商品新增
			cartItem = new CartItem();
			//根据商品id查询商品基本信息
			String json = HttpClientUtil.doGet(REST_BASE_URL + ITME_INFO_URL + itemId);
			
			//把json转换成java对象
			CenclResult result = CenclResult.formatToPojo(json, TbItem.class);
			
			//取到数据
			if(result.getStatus() == 200){
				TbItem tbItem = (TbItem) result.getData();
				//设置商品信息
				cartItem.setId(tbItem.getId());
				cartItem.setTitle(tbItem.getTitle());
				//判断是图片是否为空，不为空取第一张图片
				cartItem.setImage(tbItem.getImage() == null ? "":tbItem.getImage().split(",")[0]);
				cartItem.setNum(num);
				cartItem.setPrice(tbItem.getPrice());
				
			}
			//添加到购物车
			itemList.add(cartItem);
		}
		//把购物车列表写入cookie
		CookieUtils.setCookie(request, response, "TT_CART", JsonUtils.objectToJson(itemList),true);
		
		return CenclResult.ok();
	}
	
	//从cookie中取商品信息列表
	private List<CartItem> getCartItemList(HttpServletRequest request) {
		String cartJson = CookieUtils.getCookieValue(request, "TT_CART", true);
		
		//判断是否为空
		if(cartJson == null){
			return new ArrayList<>();
			
		}
		
		//不为空，把json转换成商品列表
		CartItem cartItem = JsonUtils.jsonToPojo(cartJson, CartItem.class);
		
		
		
		return null;	
	}

}
